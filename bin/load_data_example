#!/usr/bin/env python

import argparse
import json
import logging

from torch.utils.data import DataLoader

logging.basicConfig(level=logging.INFO)

from basismixer import (BASIS_CONFIG_EXAMPLE,
                        OnsetwiseDecompositionDynamicsCodec,
                        TimeCodec,
                        PerformanceCodec,
                        make_dataset)

LOGGER = logging.getLogger(__name__)


def main():
    parser = argparse.ArgumentParser(
        description="Construct a dataset from files in the specified folders")
    parser.add_argument("xmlfolder", help="Folder with MusicXML files")
    parser.add_argument("matchfolder", help="Folder with match files")
    parser.add_argument("--basisconfig", type=str,
                        help=("JSON file specifying a set of basis functions "
                              "for each expressive target. If not specified "
                              "a default configuration will be used."),
                        default=BASIS_CONFIG_EXAMPLE)
    args = parser.parse_args()
    basis_config = json.load(open(args.basisconfig))
    basis_functions = list(set(i for ii in basis_config.values() for i in ii))

    dyn_codec = OnsetwiseDecompositionDynamicsCodec()
    time_codec = TimeCodec(normalization='standardized_bp')
    perf_codec = PerformanceCodec(time_codec, dyn_codec)

    dataset = make_dataset(args.xmlfolder, args.matchfolder,
                           basis_functions, perf_codec)
    LOGGER.info('Dataset has {} instances'.format(len(dataset)))


if __name__ == '__main__':
    main()
